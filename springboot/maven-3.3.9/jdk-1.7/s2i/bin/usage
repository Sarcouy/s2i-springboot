#!/bin/sh

cat <<EOF
This is an running with java-1.7 compiling with maven-3.3.9 centos base image responsible for consuming a JAVA MAVEN project
and deploying with a SpringBoot application server.
To use it, install S2I: https://github.com/openshift/source-to-image.

Sample invocation:

s2i build git://github.com/example/openshift-springboot-example sarcouy/s2i-springboot:jdk1.7-mvn3.3.9 springboottest

You can then run the resulting image via:
docker run -p 8080:8080 springboottest

Details:
If a pom.xml is present in the source directory, the project is built with maven and the
output jar file defined with JAR_NAME will be copied into the SpringBoot directory and run with java JAVA_OPTS -jar JAR_NAME.

You can specify the path to the pom.xml file to build into your git repo with POM_PATH. (defaut set to .)

If there is no pom.xml, but the war specified with JAR_NAME is found, it will be moved to SPRINGBOOT_HOME directory.

The default Maven build arguments can be overridden by setting MAVEN_ARGS via the "--env" argument to S2I
default MAVEN_ARGS=clean install -DskipTests.
The default Maven build arguments can be appended by setting MAVEN_ARGS_APPEND.

If you set the "--env INCREMENTAL=true" to s2i, the sources are kept in the builded container
to deploy to allow a reuse of sources and .m2 files, which is fast but the container can reach a size of several GiB.
If you set the "--env INCREMENTAL=false" to s2i, the sources arn't kept in the builded container
to deploy, it allows a more lightweight container for releases, but longer to build.
-e INCREMENTAL has default value set to true (ready to use with --incremental)

EOF
